{"version":3,"sources":["hash.js","config.js","lib/util/constants.js","lib/components/login/style.js","lib/components/login/index.js","lib/components/greetings/index.js","lib/util/isUserLogged.js","lib/components/track/style.js","lib/components/track/index.js","globalStyles.js","lib/components/topTracks/index.js","lib/components/recentlyPlayed/index.js","lib/components/topArtists/index.js","lib/components/credits/style.js","lib/components/credits/index.js","lib/queries/getUserTop.js","lib/queries/getUser.js","lib/queries/getRecentlyPlayed.js","App.js","index.js"],"names":["hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","scopes","Description","styled","p","LoginButton","a","constants","Login","href","join","Greetings","props","user","state","TrackContainer","div","TrackArtist","label","TrackName","TrackImage","img","Track","src","name","artist","Body","Title","h1","Footer","footer","color","Source","AppHeader","MainContainer","Grid","Section","TopTracks","items","map","key","id","artists","album","images","url","RecentlyPlayed","track","TopArtists","Container","Icon","span","Credits","type","token","async","config","method","headers","fetch","response","json","result","App","topTracks","topArtists","recentlyPlayed","getUser","bind","getRecentlyPlayed","getUserTop","handleResponseBy","setState","then","_token","access_token","this","executeQueries","className","isUserLogged","display_name","getPageHeader","getAppMainPage","getPageFooter","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.939d8862.chunk.js","sourcesContent":["const hash = window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce(( initial, item ) => {\r\n        if( item ) {\r\n            var parts = item.split(\"=\")\r\n            initial[parts[0]] = decodeURIComponent(parts[1])\r\n        }\r\n\r\n        return initial\r\n    }, {})\r\n\r\nwindow.location.hash = \"\"\r\n\r\nexport default hash","export const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\n// Replace with your app's client ID, redirect URI and desired scopes\r\nexport const clientId = \"49c1e8e2a2474e76a62429a01cc8176d\";\r\n\r\n// For development on current machine\r\nexport const redirectUri = \"http://localhost:3000/\";\r\n\r\n// For use in gh-pages\r\n// export const redirectUri = \"https://arthurwerle.github.io/Spotistics/\";\r\n\r\nexport const scopes = [\r\n    \"user-read-recently-played\",\r\n];","export default {\r\n    $GREEN_HEX_CODE: '#1bb952',\r\n    $DEFAULT_TEXT_COLOR: 'white;'\r\n}","import styled from 'styled-components'\r\nimport constants from '../../util/constants'\r\n\r\nexport const Description = styled.p`\r\n    margin-top: 0;\r\n    margin-bottom: 5em;\r\n`\r\n\r\nexport const LoginButton =  styled.a`\r\n    border-radius: 2em;\r\n    background: ${ constants.$GREEN_HEX_CODE };\r\n    border: 0.2em solid ${ constants.$GREEN_HEX_CODE };\r\n    cursor: pointer;\r\n    color: rgb(255, 255, 255);\r\n    font-size: 3vmin;\r\n    padding: 0.7em 1.5em;\r\n    text-transform: uppercase;\r\n    transition: all 0.25s ease;\r\n    text-decoration: none;\r\n    margin: 0 auto;\r\n\r\n    :hover {\r\n        border: 0.2em solid #1ed760;\r\n        background-color: #1ed760;\r\n        color: rgb(255, 255, 255);\r\n    }\r\n`","import React from \"react\"\r\nimport { authEndpoint, clientId, redirectUri, scopes } from \"../../../config\"\r\nimport { LoginButton, Description } from './style'\r\n\r\nfunction Login() {\r\n\r\n    return (\r\n        <>\r\n            <h1> Spotistics </h1>\r\n            <Description>\r\n                Login with your spotify account and see your <em> most listened </em> tracks and artists\r\n            </Description>\r\n\r\n            <LoginButton\r\n                href={\r\n                    `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\") }\r\n                    &response_type=token&show_dialog=true` \r\n                }>\r\n                Login to Spotify\r\n            </LoginButton>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Login ","import React from \"react\"\r\n\r\nfunction Greetings( props ) {\r\n\r\n    return (\r\n        <div>\r\n            <div>Hey {props.user}, what's up?</div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Greetings ","export default ( state ) => {\r\n    return !!state.user\r\n}","import styled from 'styled-components'\r\n\r\nexport const TrackContainer = styled.div`\r\n    display: block;\r\n    text-align: center;\r\n    width: min-content;\r\n    flex: 1;\r\n`\r\n\r\nexport const TrackArtist = styled.label`\r\n    display: block;\r\n    font-style: italic;\r\n    font-size: 11x;\r\n`\r\n\r\nexport const TrackName = styled.label`\r\n    display: block;\r\n    font-style: italic;\r\n    font-weight: bolder;\r\n    font-size: 16px;\r\n`\r\n\r\nexport const TrackImage = styled.img`\r\n    max-width: 17em;\r\n    max-height: 12em;\r\n    width: auto;\r\n    height: auto;\r\n    display: block;\r\n    font-size: 15px;\r\n`","import React from \"react\"\r\nimport { TrackContainer, TrackName, TrackArtist, TrackImage } from './style'\r\n\r\nfunction Track( props ) {\r\n\r\n    return (\r\n        <TrackContainer>\r\n            <TrackImage src={ props.img }/>\r\n            <TrackName>{ props.name }</TrackName> \r\n            <TrackArtist>{ props.artist }</TrackArtist> \r\n        </TrackContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default Track ","import styled from 'styled-components'\r\nimport constants from './lib/util/constants'\r\n\r\nexport const Body = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n        sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n    color: ${ constants.$DEFAULT_TEXT_COLOR };\r\n`\r\n\r\nexport const Footer = styled.footer`\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: ${ ({ color = 'white' }) => color  };\r\n`\r\n\r\nexport const Source = styled( Footer )`\r\n    background-color: ${ constants.$GREEN_HEX_CODE } !important;\r\n    padding: 50px;\r\n    color: ${ constants.$DEFAULT_TEXT_COLOR };\r\n    text-align: center !important;\r\n    display: block !important;\r\n\r\n    > a {\r\n        margin-left: 10px;\r\n        border: none;\r\n        font-size: 45px;\r\n        color: black;\r\n    }\r\n\r\n    > div {\r\n        margin-top: 2em;\r\n    }\r\n`\r\n\r\nexport const AppHeader = styled.div`\r\n    flex: 5;\r\n    background-color: #ffffff;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    font-size: calc(10px + 2vmin);\r\n    color: rgb(0, 0, 0);\r\n`\r\n\r\nexport const MainContainer = styled.div`\r\n`\r\n\r\nexport const Grid = styled.div`\r\n    justify-items: center;\r\n    padding: 50px 25px;\r\n    justify-content: center;\r\n    border-radius: 10px;\r\n    display: grid;\r\n    background-color: white;;\r\n    grid-template-columns: repeat(5, 0fr);\r\n    grid-gap: 10px;\r\n`\r\n\r\nexport const Section = styled.div`\r\n    padding: 30px;\r\n`","import React from \"react\"\r\nimport Track from \"../track\"\r\nimport { Grid, Section, Title } from '../../../globalStyles'\r\n\r\nfunction TopTracks( props ) {\r\n\r\n    return (\r\n        <Section>\r\n            <Title> Your top tracks </Title>\r\n            <Grid>\r\n                { props.items.map( item => (\r\n                    <Track \r\n                        key={ item.id }\r\n                        name={ item.name }\r\n                        artist={ item.artists[0].name }\r\n                        img={ item.album.images[1].url }>\r\n                    </Track>\r\n                ))}\r\n            </Grid>\r\n        </Section>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default TopTracks ","import React from \"react\"\r\nimport Track from \"../track\"\r\nimport { Grid, Section, Title } from '../../../globalStyles'\r\n\r\nfunction RecentlyPlayed( props ) {\r\n\r\n    return (\r\n        <Section>\r\n            <Title> Recently played </Title>\r\n            <Grid>\r\n                { props.items.map( item => (\r\n                    <Track \r\n                        key={ item.track.id }\r\n                        name={ item.track.name }\r\n                        artist={ item.track.artists[0].name }\r\n                        img={ item.track.album.images[1].url }>\r\n                    </Track>\r\n                )) }\r\n            </Grid>\r\n        </Section>\r\n    )\r\n\r\n}\r\n\r\nexport default RecentlyPlayed ","import React from \"react\"\r\nimport Track from \"../track\"\r\nimport { Grid, Section, Title } from '../../../globalStyles'\r\n\r\nfunction TopArtists( props ) {\r\n\r\n    return (\r\n        <Section>\r\n            <Title> Your top artists </Title>\r\n            <Grid>\r\n                { props.items.map( item => (\r\n                    <Track \r\n                        key={ item.id }\r\n                        name={ item.name }\r\n                        img={ item.images[1].url }>\r\n                    </Track>\r\n                )) }\r\n            </Grid>\r\n        </Section>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default TopArtists ","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    font-style: italic;\r\n    font-size: 14px;\r\n    justify-content: center;\r\n    color: ${ ({ color }) => color }\r\n`\r\n\r\nexport const Icon = styled.span`\r\n    color: #F00\r\n`","import React from \"react\"\r\nimport { FaHeart } from 'react-icons/fa';\r\nimport { Container, Icon } from './style'\r\n\r\nconst linkedinLink = 'https://www.linkedin.com/in/arthur-werle-a8635a114/'\r\n\r\nfunction Credits( props ) {\r\n\r\n    return (\r\n        <Container color={ props.color }>\r\n            <label>Made with </label>\r\n            <Icon> <FaHeart/></Icon>\r\n            <span> by </span>\r\n            <a href={ linkedinLink }> <span>me</span> </a>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default Credits ","export default async ( type, token ) => {\r\n\r\n    const config = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${ token }`\r\n        }\r\n    }\r\n\r\n    const response = await fetch( `https://api.spotify.com/v1/me/top/${type}`, config )\r\n    const result = await response.json()\r\n    return result\r\n\r\n}","export default async ( token ) => {\r\n\r\n    const config = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${ token }`\r\n        }\r\n    }\r\n\r\n    const response = await fetch( `https://api.spotify.com/v1/me`, config )\r\n    const result = await response.json()\r\n    return result\r\n}","export default async( token ) => {\r\n\r\n    const config = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${ token }`\r\n        }\r\n    }\r\n\r\n    const response = await fetch( `https://api.spotify.com/v1/me/player/recently-played`, config )\r\n    const result = await response.json()\r\n    return result\r\n}","import React, { Component } from \"react\"\r\nimport hash from \"./hash\"\r\nimport { FaGithub } from 'react-icons/fa';\r\n\r\n//components\r\nimport Login from './lib/components/login'\r\nimport Greetings from './lib/components/greetings'\r\nimport isUserLogged from './lib/util/isUserLogged'\r\nimport TopTracks from './lib/components/topTracks'\r\nimport RecentlyPlayed from './lib/components/recentlyPlayed'\r\nimport TopArtists from './lib/components/topArtists'\r\nimport Credits from './lib/components/credits'\r\n\r\n//styled components\r\nimport {  AppHeader, MainContainer, Body, Footer, Source } from './globalStyles'\r\n\r\n//util\r\nimport constants  from './lib/util/constants'\r\n\r\n//queries\r\nimport getUserTop from './lib/queries/getUserTop'\r\nimport getUser from './lib/queries/getUser'\r\nimport getRecentlyPlayed from './lib/queries/getRecentlyPlayed'\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            user: null,\r\n            token: null,\r\n            topTracks: [],\r\n            topArtists: [],\r\n            recentlyPlayed: []\r\n        }\r\n\r\n        this.getUser = getUser.bind(this)\r\n        this.getRecentlyPlayed = getRecentlyPlayed.bind(this)\r\n        this.getUserTop = getUserTop.bind(this)\r\n    }\r\n\r\n    executeQueries( token ) {\r\n        const handleResponseBy = ({ type }) => {\r\n            return ( response ) => {\r\n                this.setState({\r\n                    [ type ]: response.items ? response.items : response\r\n                })\r\n            } \r\n        }\r\n\r\n        getUser( token ).then( handleResponseBy({ type: 'user' }) )\r\n        getRecentlyPlayed( token ).then( handleResponseBy({ type: 'recentlyPlayed' }) )\r\n        getUserTop( 'tracks', token ).then( handleResponseBy({ type: 'topTracks' } ))\r\n        getUserTop( 'artists', token ).then( handleResponseBy({ type: 'topArtists' } ))\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _token = hash.access_token;\r\n\r\n        if( _token ) {\r\n            this.setState({\r\n                token: _token\r\n            })\r\n\r\n            this.executeQueries( _token )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const getPageFooter = () => {\r\n            if( !isUserLogged( this.state ) ) {\r\n                return ( \r\n                    <Footer>\r\n                        <Credits/>\r\n                    </Footer>\r\n                )\r\n            }\r\n\r\n            \r\n            return\r\n        }\r\n\r\n        const getPageHeader = () => {\r\n            if( isUserLogged( this.state ) ) return\r\n\r\n            return (\r\n                <AppHeader className='login page'>\r\n                    { !isUserLogged( this.state ) && <Login/> }\r\n                    { isUserLogged( this.state ) && <Greetings user={this.state.user.display_name}/> }\r\n                </AppHeader>\r\n            )\r\n        }\r\n\r\n        const getAppMainPage = () => {\r\n            if( isUserLogged( this.state ) ) {\r\n                return (\r\n                    <MainContainer className='mainContainer'>\r\n                        <RecentlyPlayed items={ this.state.recentlyPlayed }/>\r\n                        <TopArtists items={ this.state.topArtists }/>\r\n                        <TopTracks items={ this.state.topTracks }/>\r\n                        <Source>\r\n                            <a href='https://github.com/ArthurWerle/Spotistics'> \r\n                                <FaGithub/> \r\n                            </a>\r\n                            <Credits color={ constants.$DEFAULT_TEXT_COLOR }/>\r\n                        </Source>\r\n                    </MainContainer>\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Body className='body'>\r\n                { getPageHeader() }\r\n                { getAppMainPage() }\r\n                { getPageFooter() }\r\n            </Body>          \r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport './index.css'\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}