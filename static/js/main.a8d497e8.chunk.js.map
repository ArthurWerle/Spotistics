{"version":3,"sources":["hash.js","config.js","lib/util/constants.js","lib/components/login/style.js","lib/components/login/index.js","lib/util/isUserLogged.js","lib/components/track/style.js","lib/components/track/index.js","lib/components/message/style.js","globalStyles.js","lib/components/message/index.js","lib/components/message/messageTypes.js","lib/components/topTracks/index.js","lib/components/recentlyPlayed/index.js","lib/components/topArtists/index.js","lib/components/credits/style.js","lib/components/credits/index.js","lib/queries/getUserTop.js","lib/queries/getUser.js","lib/queries/getRecentlyPlayed.js","App.js","index.js"],"names":["hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","scopes","sizes","$GREEN_HEX_CODE","$DEFAULT_TEXT_COLOR","$DEFAULT_BORDER_RADIUS","$LG_ICON_SIZE","$MD_ICON_SIZE","mobile","smallMobile","GET_DEFAULT_HEADERS_BY","token","headers","Title","styled","h1","constants","Description","p","LoginButton","a","Login","href","join","state","user","TrackContainer","div","TrackArtist","label","TrackName","TrackSmallImage","img","TrackLargeImage","Track","props","src","smallImg","largeImg","name","artist","MessageHeader","Icon","Loader","Body","color","Footer","footer","Source","AppHeader","MainContainer","Grid","Section","borderRadius","Message","type","getIcon","getIconByType","title","getTitleByType","text","SORRY","code","ERROR","SUCCESS","TopTracks","items","length","isEmpty","MessageTypes","map","key","id","artists","album","images","url","RecentlyPlayed","track","TopArtists","Container","span","Credits","async","result","fetch","response","JSON","parse","console","log","json","App","loading","topTracks","topArtists","recentlyPlayed","getUser","bind","getRecentlyPlayed","getUserTop","handleResponseBy","setState","Promise","resolve","reject","then","_token","access_token","this","executeQueries","className","isUserLogged","getPageHeader","getAppMainPage","getPageFooter","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8d497e8.chunk.js","sourcesContent":["const hash = window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce(( initial, item ) => {\r\n        if( item ) {\r\n            var parts = item.split(\"=\")\r\n            initial[parts[0]] = decodeURIComponent(parts[1])\r\n        }\r\n\r\n        return initial\r\n    }, {})\r\n\r\nwindow.location.hash = \"\"\r\n\r\nexport default hash","export const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\n// Replace with your app's client ID, redirect URI and desired scopes\r\nexport const clientId = \"49c1e8e2a2474e76a62429a01cc8176d\";\r\n\r\n// For development on current machine\r\n// export const redirectUri = \"http://localhost:3000/\";\r\n// export const redirectUri = \"http://10.0.0.78:3000/\";\r\n\r\n// For use in gh-pages\r\nexport const redirectUri = \"https://arthurwerle.github.io/Spotistics/\";\r\n\r\nexport const scopes = [\r\n    \"user-read-recently-played\",\r\n];","const sizes = {\r\n    smallMobile: '375px',\r\n    mobile: '425px',\r\n}\r\n\r\nconst GET_DEFAULT_HEADERS_BY = ( token ) => {\r\n    return {\r\n        headers: {\r\n            'Authorization': `Bearer ${ token }`\r\n        }\r\n    }\r\n}\r\n\r\nexport default {\r\n    $GREEN_HEX_CODE: '#1bb952',\r\n    $DEFAULT_TEXT_COLOR: 'white;',\r\n    $DEFAULT_BORDER_RADIUS: '10px;',\r\n    $LG_ICON_SIZE: '45px;',\r\n    $MD_ICON_SIZE: '35px;',\r\n    \r\n    //screen sizes\r\n    mobile:  `(max-width: ${ sizes.mobile })`,\r\n    smallMobile:  `(max-width: ${ sizes.smallMobile })`,\r\n\r\n    //HTTP\r\n    GET_DEFAULT_HEADERS_BY: GET_DEFAULT_HEADERS_BY\r\n}","import styled from 'styled-components'\r\nimport constants from '../../util/constants'\r\n\r\nexport const Title = styled.h1`\r\n    @media ${ constants.mobile } {\r\n        font-size: 65px;\r\n    }\r\n\r\n    @media ${ constants.smallMobile } {\r\n        font-size: 50px;\r\n    }\r\n`\r\n\r\nexport const Description = styled.p`\r\n    margin-top: 0;\r\n    margin-bottom: 5em;\r\n    padding: 30px;\r\n    text-align: center;\r\n\r\n    @media ${ constants.mobile } {\r\n        width: 60%;\r\n        height: 6%;\r\n        font-size: 15px !important;\r\n        text-align: center;\r\n        margin-bottom: 3em !important;\r\n    }\r\n`\r\n\r\nexport const LoginButton =  styled.a`\r\n    border-radius: 2em;\r\n    background: ${ constants.$GREEN_HEX_CODE };\r\n    border: 0.2em solid ${ constants.$GREEN_HEX_CODE };\r\n    cursor: pointer;\r\n    color: rgb(255, 255, 255);\r\n    font-size: 3vmin;\r\n    padding: 0.7em 1.5em;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    margin: 0 auto;\r\n\r\n    :hover {\r\n        border: 0.2em solid #1ed760;\r\n        background-color: #1ed760;\r\n        color: rgb(255, 255, 255);\r\n    }\r\n\r\n    @media ${ constants.mobile } {\r\n        width: 60%;\r\n        height: 6%;\r\n        font-size: 20px !important;\r\n        text-align: center;\r\n    }\r\n`","import React from \"react\"\r\nimport { authEndpoint, clientId, redirectUri, scopes } from \"../../../config\"\r\nimport { LoginButton, Description, Title } from './style'\r\n\r\nfunction Login() {\r\n\r\n    return (\r\n        <>\r\n            <Title> Spotistics </Title>\r\n            <Description>\r\n                Login with your spotify account and see your <em> recently played </em> and <em> most listened </em> tracks and artists\r\n            </Description>\r\n\r\n            <LoginButton\r\n                href={\r\n                    `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\") }\r\n                    &response_type=token&show_dialog=true` \r\n                }>\r\n                Login to Spotify\r\n            </LoginButton>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Login ","export default ( state ) => {\r\n    return !!state.user\r\n}","import styled from 'styled-components'\r\nimport constants from '../../util/constants'\r\n\r\nexport const TrackContainer = styled.div`\r\n    display: block;\r\n    text-align: center;\r\n    width: min-content;\r\n    flex: 1;\r\n`\r\n\r\nexport const TrackArtist = styled.label`\r\n    display: block;\r\n    font-style: italic;\r\n    font-size: 11px;\r\n\r\n    @media ${ constants.mobile } {\r\n        font-size: 8px !important;\r\n    }\r\n`\r\n\r\nexport const TrackName = styled.label`\r\n    display: block;\r\n    font-style: italic;\r\n    font-weight: bolder;\r\n    font-size: 16px;\r\n\r\n    @media ${ constants.mobile } {\r\n        font-size: 12px !important;\r\n    }\r\n`\r\n\r\nexport const TrackSmallImage = styled.img`\r\n    max-width: 17em;\r\n    max-height: 12em;\r\n    width: auto;\r\n    height: auto;\r\n    display: none;\r\n    font-size: 15px;\r\n\r\n    @media ${ constants.mobile } {\r\n        display: block !important;\r\n        max-width: 64px;\r\n        max-height: 64px;\r\n    }\r\n`\r\n\r\nexport const TrackLargeImage = styled.img`\r\n    max-width: 17em;\r\n    max-height: 12em;\r\n    width: auto;\r\n    height: auto;\r\n    display: block;\r\n    font-size: 15px;\r\n\r\n    @media ${ constants.mobile } {\r\n        display: none !important;\r\n    }\r\n`","import React from \"react\"\r\nimport { TrackContainer, TrackName, TrackArtist, TrackSmallImage, TrackLargeImage } from './style'\r\n\r\nfunction Track( props ) {\r\n\r\n    return (\r\n        <TrackContainer>\r\n            <TrackSmallImage src={ props.smallImg }/>\r\n            <TrackLargeImage src={ props.largeImg }/>\r\n            <TrackName>{ props.name }</TrackName> \r\n            <TrackArtist>{ props.artist }</TrackArtist> \r\n        </TrackContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default Track ","import styled from 'styled-components'\r\nimport constants from '../../util/constants'\r\n\r\nexport const MessageHeader = styled.div`\r\n    > div, h1 {\r\n        display: inline-block !important\r\n    }\r\n`\r\n\r\nexport const Icon = styled.div`\r\n    margin-right: 0.4em;\r\n    font-size: ${ constants.$MD_ICON_SIZE }\r\n`","import styled from 'styled-components'\r\nimport constants from './lib/util/constants'\r\n\r\nexport const Loader = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 49%;\r\n    top: 40%;\r\n    width: 80px;\r\n    height: 80px;\r\n\r\n    @media ${ constants.mobile } {\r\n        left: 41% !important;\r\n    }\r\n\r\n    div {\r\n        position: absolute;\r\n        top: 33px;\r\n        width: 13px;\r\n        height: 13px;\r\n        border-radius: 50%;\r\n        background: #fff;\r\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n    }\r\n\r\n    div:nth-child(1) {\r\n        left: 8px;\r\n        animation: lds-ellipsis1 0.6s infinite;\r\n    }\r\n\r\n    div:nth-child(2) {\r\n        left: 8px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n\r\n    div:nth-child(3) {\r\n        left: 32px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n\r\n    div:nth-child(4) {\r\n        left: 56px;\r\n        animation: lds-ellipsis3 0.6s infinite;\r\n    }\r\n\r\n    @keyframes lds-ellipsis1 {\r\n        0% {\r\n            transform: scale(0);\r\n        }\r\n\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n        \r\n    @keyframes lds-ellipsis3 {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n\r\n        100% {\r\n            transform: scale(0);\r\n        }\r\n    }\r\n\r\n    @keyframes lds-ellipsis2 {\r\n        0% {\r\n            transform: translate(0, 0);\r\n        }\r\n\r\n        100% {\r\n            transform: translate(24px, 0);\r\n        }\r\n    }\r\n`\r\n\r\nexport const Body = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n        sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n    color: ${ ({ color = constants.$DEFAULT_TEXT_COLOR }) => color };\r\n`\r\n\r\nexport const Footer = styled.footer`\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: ${ ({ color = 'white' }) => color  };\r\n`\r\n\r\nexport const Source = styled( Footer )`\r\n    background-color: ${ constants.$GREEN_HEX_CODE } !important;\r\n    padding: 50px;\r\n    color: ${ constants.$DEFAULT_TEXT_COLOR };\r\n    text-align: center !important;\r\n    display: block !important;\r\n\r\n    > a {\r\n        margin-left: 10px;\r\n        border: none;\r\n        font-size: ${ constants.$LG_ICON_SIZE };\r\n        color: black;\r\n    }\r\n\r\n    > div {\r\n        margin-top: 2em;\r\n    }\r\n`\r\n\r\nexport const AppHeader = styled.div`\r\n    flex: 5;\r\n    background-color: #ffffff;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    font-size: calc(10px + 2vmin);\r\n    color: rgb(0, 0, 0);\r\n`\r\n\r\nexport const MainContainer = styled.div`\r\n`\r\n\r\nexport const Grid = styled.div`\r\n    justify-items: center;\r\n    padding: 50px 25px;\r\n    justify-content: center;\r\n    border-radius: 10px;\r\n    display: grid;\r\n    background-color: white;;\r\n    grid-template-columns: repeat(5, 0fr);\r\n    grid-gap: 10px;\r\n\r\n    @media ${ constants.mobile } {\r\n        grid-template-columns: repeat(4, 0fr);\r\n    }\r\n\r\n    @media ${ constants.smallMobile } {\r\n        grid-template-columns: repeat(3, 0fr);\r\n    }\r\n`\r\n\r\nexport const Section = styled.div`\r\n    padding: 30px;\r\n    background-color: ${ ({ color }) => color  };\r\n    border-radius: ${ ({ borderRadius })  => borderRadius };\r\n`","import React from \"react\"\r\nimport { MessageHeader, Icon } from './style'\r\nimport { Section, Title } from '../../../globalStyles'\r\nimport constants from '../../util/constants'\r\n\r\nfunction Message( props ) {\r\n\r\n    function getTitle() {\r\n        const getIconByType = () => {\r\n            if( props.type.getIcon ) return props.type.getIcon()\r\n        }\r\n\r\n        const getTitleByType = () => {\r\n            if( props.type.title ) return props.type.title\r\n        }\r\n\r\n        return (\r\n            <MessageHeader>\r\n                <Icon>\r\n                    { getIconByType() }\r\n                </Icon>\r\n                <Title color='rgb(0,0,0);'>\r\n                    { getTitleByType() }\r\n                </Title>\r\n            </MessageHeader>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Section color='white' borderRadius={ constants.$DEFAULT_BORDER_RADIUS }>\r\n            { getTitle() }\r\n            <p>{ props.text }</p>\r\n        </Section>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default Message ","import React from \"react\"\r\nimport { FaFrown, FaLaugh, FaSadTear } from 'react-icons/fa';\r\n\r\nexport default {\r\n    SORRY: {\r\n        code: 1,\r\n        title: 'Sorry...',\r\n        getIcon: () => ( <FaFrown/> )\r\n    },\r\n    ERROR: {\r\n        code: 2,\r\n        title: 'Ops..',\r\n        getIcon: () => ( <FaSadTear/> )\r\n    },\r\n    SUCCESS: {\r\n        code: 3,\r\n        title: 'Done!',\r\n        getIcon: () => ( <FaLaugh/> )\r\n    }\r\n}","import React from \"react\"\r\nimport Track from \"../track\"\r\nimport Message from \"../message\"\r\nimport MessageTypes from \"../message/messageTypes\"\r\nimport { Grid, Section, Title } from '../../../globalStyles'\r\n\r\nfunction TopTracks( props ) {\r\n\r\n    function buildGrid() {\r\n        const isEmpty = () => {\r\n            return !props.items?.length\r\n        }\r\n\r\n        if( isEmpty() ) {\r\n            return (\r\n                <Message type={ MessageTypes.SORRY } text=\"It looks like you don't have enough spotify activity for this.\" />\r\n            )\r\n        } \r\n\r\n        return (\r\n            <Grid>\r\n                { props.items.map( item => (\r\n                    <Track \r\n                        key={ item.id }\r\n                        name={ item.name }\r\n                        artist={ item.artists[0].name }\r\n                        smallImg={ item.album.images[2].url }\r\n                        largeImg={ item.album.images[1].url }>\r\n                    </Track>\r\n                ))}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Section>\r\n            <Title> Your top tracks </Title>\r\n            { buildGrid() }\r\n        </Section>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default TopTracks ","import React from \"react\"\r\nimport Track from \"../track\"\r\nimport { Grid, Section, Title } from '../../../globalStyles'\r\n\r\nfunction RecentlyPlayed( props ) {\r\n\r\n    return (\r\n        <Section>\r\n            <Title> Recently played </Title>\r\n            <Grid>\r\n                { props.items.map( item => (\r\n                    <Track \r\n                        key={ item.track.id }\r\n                        name={ item.track.name }\r\n                        artist={ item.track.artists[0].name }\r\n                        smallImg={ item.track.album.images[2].url }\r\n                        largeImg={ item.track.album.images[1].url }>\r\n                    </Track>\r\n                )) }\r\n            </Grid>\r\n        </Section>\r\n    )\r\n\r\n}\r\n\r\nexport default RecentlyPlayed ","import React from \"react\"\r\nimport Track from \"../track\"\r\nimport Message from \"../message\"\r\nimport MessageTypes from \"../message/messageTypes\"\r\nimport { Grid, Section, Title } from '../../../globalStyles'\r\n\r\nfunction TopArtists( props ) {\r\n\r\n    function buildGrid() {\r\n        const isEmpty = () => {\r\n            return !props.items?.length\r\n        }\r\n\r\n        if( isEmpty() ) {\r\n            return <Message type={ MessageTypes.SORRY } text=\"It looks like you don't have enough spotify activity for this.\" />\r\n        }\r\n            \r\n\r\n        return (\r\n            <Grid>\r\n                { props.items.map( item => (\r\n                    <Track \r\n                        key={ item.id }\r\n                        name={ item.name }\r\n                        smallImg={ item.images[2].url }\r\n                        largeImg={ item.images[1].url }>\r\n                    </Track>\r\n                ))}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Section>\r\n            <Title> Your top artists </Title>\r\n            { buildGrid() }\r\n        </Section>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default TopArtists ","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    font-style: italic;\r\n    font-size: 14px;\r\n    justify-content: center;\r\n    color: ${ ({ color }) => color }\r\n`\r\n\r\nexport const Icon = styled.span`\r\n    color: #F00\r\n`","import React from \"react\"\r\nimport { FaHeart } from 'react-icons/fa';\r\nimport { Container, Icon } from './style'\r\n\r\nconst linkedinLink = 'https://www.linkedin.com/in/arthur-werle-a8635a114/'\r\n\r\nfunction Credits( props ) {\r\n\r\n    return (\r\n        <Container color={ props.color }>\r\n            <label>Made with </label>\r\n            <Icon> <FaHeart/></Icon>\r\n            <span> by </span>\r\n            <a href={ linkedinLink }> <span>me</span> </a>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default Credits ","import constants from '../util/constants'\r\nconst GET_DEFAULT_HEADERS_BY = constants.GET_DEFAULT_HEADERS_BY\r\n\r\nexport default async ( type, token ) => {\r\n\r\n    let result = null\r\n\r\n    try {\r\n        const response = await fetch( `https://api.spotify.com/v1/me/top/${type}`, GET_DEFAULT_HEADERS_BY( token ) )\r\n\r\n\r\n        result = await response.text()\r\n        result = result === \"\" ? [] : JSON.parse(result)\r\n    } catch( e ) {\r\n        console.log( `getUserTop ${type}: ${e} ` )\r\n    } finally {\r\n        return result\r\n    }\r\n\r\n\r\n}","import constants from '../util/constants'\r\nconst GET_DEFAULT_HEADERS_BY = constants.GET_DEFAULT_HEADERS_BY\r\n\r\nexport default async ( token ) => {\r\n    const response = await fetch( `https://api.spotify.com/v1/me`, GET_DEFAULT_HEADERS_BY( token ) )\r\n    const result = await response.json()\r\n    return result\r\n}","import constants from '../util/constants'\r\nconst GET_DEFAULT_HEADERS_BY = constants.GET_DEFAULT_HEADERS_BY\r\n\r\n\r\nexport default async( token ) => {\r\n    const response = await fetch( `https://api.spotify.com/v1/me/player/recently-played`, GET_DEFAULT_HEADERS_BY( token ) )\r\n    const result = await response.json()\r\n    return result\r\n}","import React, { Component } from \"react\"\r\nimport hash from \"./hash\"\r\nimport { FaGithub } from 'react-icons/fa';\r\n\r\n//components\r\nimport Login from './lib/components/login'\r\nimport isUserLogged from './lib/util/isUserLogged'\r\nimport TopTracks from './lib/components/topTracks'\r\nimport RecentlyPlayed from './lib/components/recentlyPlayed'\r\nimport TopArtists from './lib/components/topArtists'\r\nimport Credits from './lib/components/credits'\r\n\r\n//styled components\r\nimport {  AppHeader, MainContainer, Body, Footer, Source, Loader } from './globalStyles'\r\n\r\n//util\r\nimport constants  from './lib/util/constants'\r\n\r\n//queries\r\nimport getUserTop from './lib/queries/getUserTop'\r\nimport getUser from './lib/queries/getUser'\r\nimport getRecentlyPlayed from './lib/queries/getRecentlyPlayed'\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            loading: false,\r\n            user: null,\r\n            token: null,\r\n            topTracks: [],\r\n            topArtists: [],\r\n            recentlyPlayed: []\r\n        }\r\n\r\n        this.getUser = getUser.bind(this)\r\n        this.getRecentlyPlayed = getRecentlyPlayed.bind(this)\r\n        this.getUserTop = getUserTop.bind(this)\r\n    }\r\n\r\n    executeQueries( token ) {\r\n        const handleResponseBy = ({ type }) => {\r\n            return ( response ) => {\r\n                if( !response ) return\r\n                \r\n                this.setState({\r\n                    [ type ]: response.items ? response.items : response\r\n                })\r\n            } \r\n        }\r\n\r\n        return new Promise( async ( resolve, reject ) => {\r\n            try {\r\n                await getUser( token ).then( handleResponseBy({ type: 'user' }) )\r\n                await getRecentlyPlayed( token ).then( handleResponseBy({ type: 'recentlyPlayed' }) )\r\n                await getUserTop( 'tracks', token ).then( handleResponseBy({ type: 'topTracks' } ))\r\n                await getUserTop( 'artists', token ).then( handleResponseBy({ type: 'topArtists' } ))\r\n            } catch( e ) {\r\n                reject( e )\r\n                throw e\r\n            }\r\n            \r\n            resolve()\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const startLoading = () => {\r\n            this.setState({\r\n                loading: true\r\n            })\r\n        }\r\n\r\n        const stopLoading = () => {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n\r\n        let _token = hash.access_token\r\n        \r\n        if( _token ) {\r\n            startLoading()\r\n            this.setState({\r\n                token: _token\r\n            })\r\n\r\n            this.executeQueries( _token ).then( stopLoading )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const getPageFooter = () => {\r\n            if( !isUserLogged( this.state ) ) {\r\n                return ( \r\n                    <Footer>\r\n                        <Credits/>\r\n                    </Footer>\r\n                )\r\n            }\r\n\r\n            \r\n            return\r\n        }\r\n\r\n        const getPageHeader = () => {\r\n            if( isUserLogged( this.state ) ) return\r\n\r\n            return (\r\n                <AppHeader className='login page'>\r\n                    { !isUserLogged( this.state ) && <Login/> }\r\n                </AppHeader>\r\n            )\r\n        }\r\n\r\n        const getAppMainPage = () => {\r\n            if( isUserLogged( this.state ) ) {\r\n                return (\r\n                    <MainContainer className='mainContainer'>\r\n                        <RecentlyPlayed items={ this.state.recentlyPlayed }/>\r\n                        <TopArtists items={ this.state.topArtists }/>\r\n                        <TopTracks items={ this.state.topTracks }/>\r\n                        <Source>\r\n                            <a href='https://github.com/ArthurWerle/Spotistics'> \r\n                                <FaGithub/> \r\n                            </a>\r\n                            <Credits color={ constants.$DEFAULT_TEXT_COLOR }/>\r\n                        </Source>\r\n                    </MainContainer>\r\n                )\r\n            }\r\n        }\r\n\r\n        const geLoader = () => {\r\n            return (\r\n                <Loader>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </Loader>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Body className='body'>\r\n                { getPageHeader() }\r\n                { !this.state.loading && getAppMainPage() }\r\n                { this.state.loading && geLoader() }\r\n                { getPageFooter() }\r\n            </Body>          \r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport './index.css'\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}